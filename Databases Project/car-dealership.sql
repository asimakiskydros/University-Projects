CREATE TABLE MECHANIC (
  ID INTEGER  NOT NULL  ,
  SURNAME VARCHAR(50)    ,
  NAME  VARCHAR(50)      ,
PRIMARY KEY(ID));



CREATE TABLE VENDOR (
  ID INTEGER  NOT NULL  ,
  SURNAME VARCHAR(50)    ,
  NAME VARCHAR(50)      ,
PRIMARY KEY(ID));



CREATE TABLE CUSTOMER (
  ID INTEGER  NOT NULL  ,
  SURNAME VARCHAR(50)    ,
  NAME VARCHAR(50)    ,
  PHONE_NUMBER VARCHAR(20)    ,
  CITY VARCHAR(50)    ,
  POSTCODE INTEGER    ,
  STREET_NAME VARCHAR(50)    ,
  STREET_NUMBER INTEGER      ,
PRIMARY KEY(ID));



CREATE TABLE SERVICE_TICKET (
  CODE INTEGER  NOT NULL  ,
  CUSTOMER_ID INTEGER  NOT NULL  ,
  CAR_ARRIVAL DATE    ,
  CAR_DEPARTURE DATE    ,
  COMMENTS VARCHAR(200)    ,
  COST FLOAT      ,
PRIMARY KEY(CODE),
  FOREIGN KEY(CUSTOMER_ID)
    REFERENCES CUSTOMER(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);



CREATE TABLE CAR (
  ID INTEGER  NOT NULL  ,
  VENDOR_ID INTEGER  NOT NULL  ,
  CUSTOMER_ID INTEGER  NOT NULL  ,
  MODEL VARCHAR(50)    ,
  SERIAL_NUMBER INTEGER    ,
  MANUFACTURER VARCHAR(50)    ,
  COLOR VARCHAR(20)    ,
  YEAR_OF_MANUFACTURE INTEGER    ,
  STATE BOOL      ,
PRIMARY KEY(ID),
  FOREIGN KEY(CUSTOMER_ID)
    REFERENCES CUSTOMER(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(VENDOR_ID)
    REFERENCES VENDOR(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);



CREATE TABLE INVOICE (
  VENDOR_ID INTEGER  NOT NULL  ,
  CUSTOMER_ID INTEGER  NOT NULL  ,
  CODE INTEGER    ,
  DATE_OF_ISSUE DATE    ,
  TOTAL_PRICE FLOAT      ,
PRIMARY KEY(VENDOR_ID, CUSTOMER_ID),
  FOREIGN KEY(VENDOR_ID)
    REFERENCES VENDOR(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(CUSTOMER_ID)
    REFERENCES CUSTOMER(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);



CREATE TABLE SERVICE (
  CAR_ID INTEGER  NOT NULL  ,
  MECHANIC_ID INTEGER  NOT NULL  ,
  TOTAL_WORKING_HOURS INTEGER    ,
  MECHANIC_COMMENTS VARCHAR(200)      ,
PRIMARY KEY(CAR_ID, MECHANIC_ID),
  FOREIGN KEY(CAR_ID)
    REFERENCES CAR(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(MECHANIC_ID)
    REFERENCES MECHANIC(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);




